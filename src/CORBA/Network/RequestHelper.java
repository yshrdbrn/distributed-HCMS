package CORBA.Network;


/**
* CORBA.Network/RequestHelper.java .
* Generated by the CORBA.IDL-to-Java compiler (portable), version "3.2"
* from Request.idl
* Sunday, October 27, 2019 12:19:24 o'clock AM EDT
*/

abstract public class RequestHelper
{
  private static String  _id = "CORBA.IDL:CORBA.Network/Request:1.0";

  public static void insert (org.omg.CORBA.Any a, CORBA.Network.Request that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static CORBA.Network.Request extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [7];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = CORBA.Network.RequestTypeHelper.type ();
          _members0[0] = new org.omg.CORBA.StructMember (
            "requestType",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_wstring_tc (0);
          _members0[1] = new org.omg.CORBA.StructMember (
            "userID",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_wstring_tc (0);
          _members0[2] = new org.omg.CORBA.StructMember (
            "appointmentID",
            _tcOf_members0,
            null);
          _tcOf_members0 = CORBA.Network.AppointmentTypeHelper.type ();
          _members0[3] = new org.omg.CORBA.StructMember (
            "appointmentType",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_wstring_tc (0);
          _members0[4] = new org.omg.CORBA.StructMember (
            "secondAppointmentID",
            _tcOf_members0,
            null);
          _tcOf_members0 = CORBA.Network.AppointmentTypeHelper.type ();
          _members0[5] = new org.omg.CORBA.StructMember (
            "secondAppointmentType",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_long);
          _members0[6] = new org.omg.CORBA.StructMember (
            "capacity",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (CORBA.Network.RequestHelper.id (), "Request", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static CORBA.Network.Request read (org.omg.CORBA.portable.InputStream istream)
  {
    CORBA.Network.Request value = new CORBA.Network.Request ();
    value.requestType = CORBA.Network.RequestTypeHelper.read (istream);
    value.userID = istream.read_wstring ();
    value.appointmentID = istream.read_wstring ();
    value.appointmentType = CORBA.Network.AppointmentTypeHelper.read (istream);
    value.secondAppointmentID = istream.read_wstring ();
    value.secondAppointmentType = CORBA.Network.AppointmentTypeHelper.read (istream);
    value.capacity = istream.read_long ();
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, CORBA.Network.Request value)
  {
    CORBA.Network.RequestTypeHelper.write (ostream, value.requestType);
    ostream.write_wstring (value.userID);
    ostream.write_wstring (value.appointmentID);
    CORBA.Network.AppointmentTypeHelper.write (ostream, value.appointmentType);
    ostream.write_wstring (value.secondAppointmentID);
    CORBA.Network.AppointmentTypeHelper.write (ostream, value.secondAppointmentType);
    ostream.write_long (value.capacity);
  }

}

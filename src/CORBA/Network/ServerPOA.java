package CORBA.Network;


/**
* CORBA.Network/ServerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Server.idl
* Saturday, November 23, 2019 4:09:22 o'clock PM EST
*/

public abstract class ServerPOA extends org.omg.PortableServer.Servant
 implements CORBA.Network.ServerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("AddAppointment", new java.lang.Integer (0));
    _methods.put ("RemoveAppointment", new java.lang.Integer (1));
    _methods.put ("ListAppointmentAvailability", new java.lang.Integer (2));
    _methods.put ("BookAppointment", new java.lang.Integer (3));
    _methods.put ("CancelAppointment", new java.lang.Integer (4));
    _methods.put ("SwapAppointment", new java.lang.Integer (5));
    _methods.put ("GetAppointmentSchedule", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // CORBA.Network/Server/AddAppointment
       {
         CORBA.Network.Request request = CORBA.Network.RequestHelper.read (in);
         CORBA.Network.Response $result = null;
         $result = this.AddAppointment (request);
         out = $rh.createReply();
         CORBA.Network.ResponseHelper.write (out, $result);
         break;
       }

       case 1:  // CORBA.Network/Server/RemoveAppointment
       {
         CORBA.Network.Request request = CORBA.Network.RequestHelper.read (in);
         CORBA.Network.Response $result = null;
         $result = this.RemoveAppointment (request);
         out = $rh.createReply();
         CORBA.Network.ResponseHelper.write (out, $result);
         break;
       }

       case 2:  // CORBA.Network/Server/ListAppointmentAvailability
       {
         CORBA.Network.Request request = CORBA.Network.RequestHelper.read (in);
         CORBA.Network.Response $result = null;
         $result = this.ListAppointmentAvailability (request);
         out = $rh.createReply();
         CORBA.Network.ResponseHelper.write (out, $result);
         break;
       }

       case 3:  // CORBA.Network/Server/BookAppointment
       {
         CORBA.Network.Request request = CORBA.Network.RequestHelper.read (in);
         CORBA.Network.Response $result = null;
         $result = this.BookAppointment (request);
         out = $rh.createReply();
         CORBA.Network.ResponseHelper.write (out, $result);
         break;
       }

       case 4:  // CORBA.Network/Server/CancelAppointment
       {
         CORBA.Network.Request request = CORBA.Network.RequestHelper.read (in);
         CORBA.Network.Response $result = null;
         $result = this.CancelAppointment (request);
         out = $rh.createReply();
         CORBA.Network.ResponseHelper.write (out, $result);
         break;
       }

       case 5:  // CORBA.Network/Server/SwapAppointment
       {
         CORBA.Network.Request request = CORBA.Network.RequestHelper.read (in);
         CORBA.Network.Response $result = null;
         $result = this.SwapAppointment (request);
         out = $rh.createReply();
         CORBA.Network.ResponseHelper.write (out, $result);
         break;
       }

       case 6:  // CORBA.Network/Server/GetAppointmentSchedule
       {
         CORBA.Network.Request request = CORBA.Network.RequestHelper.read (in);
         CORBA.Network.Response $result = null;
         $result = this.GetAppointmentSchedule (request);
         out = $rh.createReply();
         CORBA.Network.ResponseHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CORBA.Network/Server:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Server _this() 
  {
    return ServerHelper.narrow(
    super._this_object());
  }

  public Server _this(org.omg.CORBA.ORB orb) 
  {
    return ServerHelper.narrow(
    super._this_object(orb));
  }


} // class ServerPOA
